{% from "swift/map.jinja" import proxy,common with context %}

[DEFAULT]
bind_ip = {{ proxy.bind.address }}
bind_port = {{ proxy.bind.port }}
swift_dir = {{ common.swift_dir }}
user = swift

workers = {{ proxy.workers }}
log_level = {{ proxy.get('log_level', 'INFO') }}

#eventlet_debug = true
#conn_timeout=3


[pipeline:main]
pipeline = catch_errors gatekeeper healthcheck proxy-logging cache {{ " ".join(proxy.get('pipeline',[])) }} container_sync bulk ratelimit {% if proxy.tempauth.enabled %}tempauth {% endif %} {%if proxy.identity is defined %}authtoken keystoneauth {% endif %}list-endpoints container-quotas account-quotas slo dlo versioned_writes proxy-logging proxy-server

[app:proxy-server]
#allow_account_management = true
account_autocreate = true
conn_timeout = 20
node_timeout = 120
use = egg:swift#proxy
{%- if proxy.sorting_method is defined or proxy.affinity.enabled %}
sorting_method = {{ proxy.get('sorting_method', 'affinity') }}
{%- endif %}
{%- if proxy.affinity.enabled %}
write_affinity_node_count = 2 * replicas
read_affinity = {{ proxy.affinity.read }}
write_affinity = {{ proxy.affinity.write }}
{%- endif %}


{%- if proxy.tempauth.enabled %}
[filter:tempauth]
use = egg:swift#tempauth
#reseller_prefix = TEMPAUTH

#user_<account>_<user> = <password> [group] [group] [...] [storage_url]
{%- for user in proxy.tempauth.users %}
user_{{ user.account }}_{{ user.name }} = {{ user.password }} {{ user.get('groups', '') }} {{ user.get('storage_url', '') }}
{%- endfor %}
{%- endif %}

[filter:crossdomain]
use = egg:swift#crossdomain

[filter:list-endpoints]
use = egg:swift#list_endpoints

{%- if proxy.identity is defined %}
[filter:authtoken]
paste.filter_factory = keystonemiddleware.auth_token:filter_factory
identity_uri = http://{{ proxy.identity.host }}:35357/
auth_url = http://{{ proxy.identity.host }}:35357/
auth_uri = http://{{ proxy.identity.host }}:5000/
tenant_name = {{ proxy.identity.tenant }}
username = {{ proxy.identity.user }}
password = {{ proxy.identity.password }}
delay_auth_decision = true
auth_plugin = password

signing_dir = /var/cache/swift
cache = swift.cache
include_service_catalog = False

[filter:keystoneauth]
use = egg:swift#keystoneauth
operator_roles = admin, Member
{%- endif %}

[filter:healthcheck]
use = egg:swift#healthcheck

[filter:cache]
use = egg:swift#memcache

[filter:ratelimit]
use = egg:swift#ratelimit

[filter:domain_remap]
use = egg:swift#domain_remap

[filter:catch_errors]
use = egg:swift#catch_errors

[filter:cname_lookup]
use = egg:swift#cname_lookup

[filter:staticweb]
use = egg:swift#staticweb

[filter:tempurl]
use = egg:swift#tempurl

[filter:formpost]
use = egg:swift#formpost

[filter:name_check]
use = egg:swift#name_check

[filter:list-endpoints]
use = egg:swift#list_endpoints

[filter:proxy-logging]
reveal_sensitive_prefix = 12
use = egg:swift#proxy_logging

[filter:bulk]
use = egg:swift#bulk

[filter:slo]
use = egg:swift#slo

[filter:dlo]
use = egg:swift#dlo

[filter:container-quotas]
use = egg:swift#container_quotas

[filter:account-quotas]
use = egg:swift#account_quotas

[filter:gatekeeper]
use = egg:swift#gatekeeper

[filter:container_sync]
use = egg:swift#container_sync

[filter:xprofile]
use = egg:swift#xprofile

[filter:versioned_writes]
use = egg:swift#versioned_writes

[filter:swift3]
use = egg:swift3#swift3

{#-
vim: syntax=jinja
-#}
